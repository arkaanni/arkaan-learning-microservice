plugins {
    id("org.jetbrains.kotlin.jvm") version "1.9.23"
    id("org.jetbrains.kotlin.plugin.serialization") version "1.9.23"
    id 'io.ktor.plugin' version '2.3.1'
    id("org.jetbrains.kotlin.plugin.allopen") version "1.9.23"
    id("com.google.devtools.ksp") version "1.9.23-1.0.19"
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.3.6"
    id("io.micronaut.aot") version "4.3.6"
}

group "dev.arkaan.schl"
version "0.0.1"
mainClassName = "io.ktor.server.netty.EngineMain"

def isDevelopment = project.ext.has("development")
applicationDefaultJvmArgs = ["-Dio.ktor.development=$isDevelopment"]

repositories {
    mavenCentral()
}

ktor {
    fatJar {
        archiveFileName.set("subject-service.jar")
    }
}

setTestResultsDirName "test-reports"

dependencies {
    implementation platform("org.jdbi:jdbi3-bom:3.38.2")
    implementation platform('org.testcontainers:testcontainers-bom:1.18.3')

    implementation "io.ktor:ktor-server-core-jvm:$ktor_version"
    implementation "io.ktor:ktor-server-netty-jvm:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-server-config-yaml:$ktor_version"
    implementation "io.ktor:ktor-server-content-negotiation:$ktor_version"
    implementation "io.ktor:ktor-serialization-jackson:$ktor_version"
    implementation "io.ktor:ktor-server-cors:$ktor_version"
    implementation 'org.jdbi:jdbi3-core'
    implementation "com.mysql:mysql-connector-j:$mysql_version"
    implementation "com.zaxxer:HikariCP:$hikari_version"

    testImplementation "io.ktor:ktor-server-tests-jvm:$ktor_version"
    testImplementation "io.ktor:ktor-server-test-host:$ktor_version"
    testImplementation "io.ktor:ktor-client-content-negotiation:$ktor_version"
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.testcontainers:mysql'

    ksp("io.micronaut:micronaut-http-validation")
    ksp("io.micronaut.serde:micronaut-serde-processor")
    implementation('org.yaml:snakeyaml:2.2')
    implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.micronaut.sql:micronaut-jdbi")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    compileOnly("io.micronaut:micronaut-http-client")
    runtimeOnly("io.micronaut.sql:micronaut-jdbc-hikari")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")
    testImplementation("io.micronaut:micronaut-http-client")
}

java {
    sourceCompatibility = JavaVersion.toVersion("17")
}


graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit4")
    processing {
        incremental(true)
        annotations("subject.service.*")
    }
    aot {
        // Please review carefully the optimizations enabled below
        // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
        replaceLogbackXml = false
    }
}
